+ trap 'cat /sys/fs/cgroup/memory/$(cat /proc/$$/cgroup | grep -oP '\''^.*:memory:\K.*$'\'')/memory.max_usage_in_bytes > /import/ch-sc-swdump2/surajk/artifact_root/apps/ch__jit_logreg_multi_epoch_training_test/run/max_used_host_memory.0 && grep --text -oP "slurmJobId=$SLURM_JOB_ID.*Physical RDU ID: \K\d+" /var/log/sambaflow/runtime/sn.log > /import/ch-sc-swdump2/surajk/artifact_root/apps/ch__jit_logreg_multi_epoch_training_test/run/physical_chip_ids.0 || true' EXIT
+ cd /import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/frontend/jit/torch_rdu/test/python/
+ ulimit -l unlimited
+ mkdir -p /scratch/surajk/.cache/huggingface
+ export PATH=/usr/local/bin:/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin
+ PATH=/usr/local/bin:/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin
+ export PYTHONPATH=/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/venv/lib/python3.7/site-packages:/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/sambaflow:/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/frontend/jit/torch_rdu/test/python/
+ PYTHONPATH=/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/venv/lib/python3.7/site-packages:/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/sambaflow:/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/frontend/jit/torch_rdu/test/python/
+ export LD_LIBRARY_PATH=/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/lib:/opt/llvm12/lib:
+ LD_LIBRARY_PATH=/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p/lib:/opt/llvm12/lib:
+ export SOFTWARE_HOME=/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p
+ SOFTWARE_HOME=/import/ch-sc-swdump2/surajk/sambaflow_PIaWV9hw0p
+ export ARTIFACT_ROOT=/import/ch-sc-swdump2/surajk/artifact_root
+ ARTIFACT_ROOT=/import/ch-sc-swdump2/surajk/artifact_root
+ true
+ OMP_NUM_THREADS=8
+ python experiments/logreg.py
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {1, 16} ...
[compiler:info] [torch_rdu] Copy from: 0x55e63089d650 to: 0x55e62f84d0e0
[compiler:info]   Source: 64 bytes with name  0x0
[compiler:info]   Dest: 64 bytes with name  0x0
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {1} ...
[compiler:info] [torch_rdu] Copy from: 0x55e63089d920 to: 0x55e62f7bf7a0
[compiler:info]   Source: 8 bytes with name  0x0
[compiler:info]   Dest: 8 bytes with name  0x0
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {2, 16} ...
[compiler:info] [torch_rdu] Copy from: 0x55e630be9ae0 to: 0x55e630c07740
[compiler:info]   Source: 128 bytes with name  0x55e630bd4ee0
[compiler:info]   Dest: 128 bytes with name  0x0
[compiler:info] RDU shallow_copy_and_detach &&0 0x55e630c07740 1 has_backanno: 0
[compiler:info] RDU shallow_copy_and_detach &0 0x55e630c07910 1 has_backanno: 0
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {1, 16} mat2 dims: {16, 2} device_type: rdu:0 rdu:0
[compiler:info] platform name...
[compiler:info] DataScale SN10-8
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] JIT::construct 23861319 ns
[JITPerf] &JIT::construct 23875429 ns
[JITPerf] get_empty() 840 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 100 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07740 1 has_backanno: 0
[JITPerf] &JIT::construct 150 ns
[JITPerf] extract_inputs_helper() 1334398 ns
[JITPerf] &JIT::construct 100 ns
[JITPerf] get_rdu_tensor_impl() 209 ns
[JITPerf] update_ir() 2780 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1515489 ns
[JITPerf] apply_binary() 1530370 ns
[compiler:info] [torch_rdu] _log_softmax ...
[JITPerf] &JIT::construct 160 ns
[JITPerf] get_empty() 340 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 80 ns
[JITPerf] extract_inputs_helper() 2340 ns
[JITPerf] &JIT::construct 80 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 140 ns
[JITPerf] update_ir() 1300 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_unary() 170261 ns
[JITPerf] apply_unary_out() 182141 ns
[compiler:info] RDU shallow_copy_and_detach &1 0x55e630c07740 0 has_backanno: 0
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_forward_out ...
[JITPerf] &JIT::construct 100 ns
[JITPerf] force_evaluate::RDUTensorImpl 280 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 57611 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    "air.Output"(%3) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
    "air.Output"(%5) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 96450 ns
[compiler:info] ====== HASH INFO: dab861f9d5b500e2257da57984b94ffe395ce7cef116e21c831abf556923e098
[mac:warn] name collision detected for Permute_0
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
MAC050_AIRResourceAwarePeepholeOptIter converged after 1 iteration(s)
MAC055_AIRToTLIRLoweringNestedLoopsIter converged after 0 iteration(s)
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
[info    ] [PLASMA] Launching plasma compilation! See log file: /scratch/jobs/38941858/jit_out/jit_out.plasma_compile.log
[info    ] Total per-section passes: 77
[info    ] Compiling graph for section 0
[mac:info] Building nameddims for graph jit_out
[mac:info] Analyze tiling for graph: jit_out
[mac:info] Mapping for graph jit_out
[mac:info] Set up stage ID and metapipe ID for section 0
[mac:info] MAC decided on the following section cuts for graph jit_out
[mac:info] Amortized resources overall: 6.000000e+00 PCUs, 2.500000e+01 PMUs, projected latency: 3.515514e-05 s, FLOPS: 2.389409e-06 T/s, DDR_BW: 2.755146e-03 GB/s
[mac:info] Lowering to TLIR succeeded.
[rail:info] Logs are generated in /scratch/jobs/38941858/jit_out//rail_gen//rail_compile_logs for partition_0_0_.
[rail:info] Compilation succeeded for partition_0_0_. Elapsed time:  1ms
[info    ] [PASS] Running PRISM000_PreProcessPass0_0
[info    ] Generated utilization report file: /scratch/jobs/38941858/jit_out/jit_out.s0.utilization_report.txt
[info    ] [PASS] Running PRISM001_FeedbackGenPass0_0
[info    ] [PASS] Running PRISM002_PlasmaIRPass0_0
[compiler:info] Starting Plasma compile at /scratch/jobs/38941858/jit_out/plasma_ir_modules/sections_0_0
[compiler:info] Plasma compile succeeded.
[compiler:info] Starting Plasma compile at /scratch/jobs/38941858/jit_out/plasma_ir_modules/schedule_0_0
[compiler:info] Plasma compile succeeded.
[info    ] [PASS] Running PRISM003_PlasmaIRSymbolAllocExportPass0_0
[info    ] [PASS] Running PRISM004_LegalizeUtilizationPass0_0
[info    ] [PASS] Running PRISM005_LegalizeSocketConnectionsPass0_0
[info    ] [PASS] Running PRISM006_LayoutConsolidationPass0_0
[info    ] [PASS] Running PRISM007_PmuLoadStoreSetupPass0_0
[info    ] [PASS] Running PRISM008_FinalizeIoPass0_0
[info    ] [PASS] Running PRISM009_CollectConnectionPass0_0
[info    ] [PASS] Running PRISM010_NetworkValidationPass0_0
[info    ] [PASS] Running PRISM011_DramAnalyticalReportPass0_0
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[info    ] Logging dram analysis report to /scratch/jobs/38941858/jit_out/prism_gen/reports/dram_analysis.json
[info    ] [PASS] Running PRISM012_AsmIRGenPNRConnectPass0_0
[info    ] [PASS] Running PRISM013_PrintLoweringPass0_0
[info    ] [PASS] Running PRISM014_AsmIRResourceAllocationPass0_0
[info    ] [PASS] Running PRISM015_PmuExprCompilePass0_0
[info    ] [PASS] Running PRISM016_GroupAnnotationPass0_0
[info    ] [PASS] Running PRISM017_TemplateDataflowGraphPass0_0
[info    ] [PASS] Running PRISM018_BoxUtilizationLegalizerPass0_0
[info    ] [PASS] Running PRISM019_LegalizePartitionAssignmentPass0_0
[info    ] [PASS] Running PRISM020_ConditionValidationPass0_0
[info    ] [PASS] Running PRISM021_AssignMetapipeStagePass0_0
[info    ] [PASS] Running PRISM022_AnalyticalModelFileGenPass0_0
[info    ] [PASS] Running PRISM023_PlasmaIRProgramStatePass0_0
[info    ] [PASS] Running PRISM024_MetapipeStageLatencyPass0_0
[info    ] Generated metapipe stage graph dot file: /scratch/jobs/38941858/jit_out/stage_buffers/partition_latency_0_0.dot
[info    ] [PASS] Running PRISM025_MetapipeStageGraphPass0_0
[info    ] [PASS] Running PRISM026_BandwidthAnnotationPass0_0
[warning ] [../prism/src/plasma/lib/Core/Traversal/Transform/BandwidthAnnotationPass.cpp:230] PMU data sink socket softmax_0_0_20_fwdprop_pinput_PMU PMU Context: WRITE, 0 @ (255, 255, 0, 0):<PMU_INFIFO.VECTOR_SW: 4> has computed bandwidth smaller than user annotated bandwidth:  computed ideal bandwidth = 0.4, annotated ideal bandwidth = 1
[info    ] BandwidthAnnotationPropagation log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM026_BandwidthAnnotationPass0_0.BWP.0.0.log
[info    ] BandwidthAnnotationPropagation log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM026_BandwidthAnnotationPass0_0.BWP.0.0.log
[info    ] 

============ Bandwidth QA Report ============

Total edges: 23
Bandwidth starving edges before pass (src/sink < 0.8): 14 (60.8696%)
Bandwidth back pressure edges before pass (src/sink > 1.2): 8 (34.7826%)
Missing source bandwidth after pass: 0 (0%)
Missing sink bandwidth after pass: 0 (0%)

[info    ] [PASS] Running PRISM027_FilePlacementPass_GenEdgeId0_0
[info    ] [PASS] Running PRISM028_FloorplanPass0_0
[info    ] Floorplanning log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM028_FloorplanPass0_0.FP.0.0.log
[info    ] [PASS] Running PRISM029_VagAllocPass0_0
[info    ] [PASS] Running PRISM030_AsmIRPrePortAllocAsmTransformPass0_0
[info    ] [PASS MANAGER] Start PnR
[info    ] [PASS] Running PRISM031_PlacerPass0_0
[info    ] Prism config stored in: /scratch/jobs/38941858/jit_out/jit_out.configs
[info    ] Launching placement flow with (set) 1 threads
[info    ] BoxPlanner log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.BP.0.0.log
[info    ] WavefrontPlacer log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.DFG.0.0.log
[info    ] SAPlacer log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.SA.0.0.log
[info    ] Placement runtime:	partition{0, 0}: 0s	
[info    ] [PASS] Running PRISM032_PmuTwinPass0_0
[info    ] [PASS] Running PRISM033_TemplateTileDoneLoweringPass0_0
[info    ] [PASS] Running PRISM034_VagConfigurePass0_0
[info    ] [PASS] Running PRISM035_VagAllocReportPass0_0
[info    ] [PASS] Running PRISM036_DataPortAllocatorPass0_0
[info    ] [PASS] Running PRISM037_AgcuOrchestrationPass0_0
[info    ] [PASS] Running PRISM038_RampControlPass0_0
[info    ] [PASS] Running PRISM039_E2EInjectionPass0_0
[info    ] [PASS] Running PRISM040_InstrumentationPreprocessPass0_0
[info    ] [PASS] Running PRISM041_BarrierLoweringPass0_0
[info    ] [PASS] Running PRISM042_ControlPortAllocatorPass0_0
[info    ] [PASS] Running PRISM043_ControlBandwidthAnnotationPass0_0
[info    ] [PASS] Running PRISM044_InstrumentationCounterPass0_0
[info    ] [PASS] Running PRISM045_ControlPortAllocatorPass0_0
[info    ] [PASS] Running PRISM046_ControlConnectorPass0_0
[info    ] [PASS] Running PRISM047_DataConnectorPass0_0
[info    ] [PASS MANAGER] Done with PnR
[info    ] [PASS] Running PRISM048_BandwidthReportPass0_0
[info    ] BandwidthReport log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM048_BandwidthReportPass0_0.VECTOR.0.0.log
[info    ] BandwidthReport log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM048_BandwidthReportPass0_0.SCALAR.0.0.log
[info    ] [PASS] Running PRISM049_FeedbackGenPass0_0
[info    ] [PASS] Running PRISM050_ControlConnectionCodegenPass0_0
[info    ] [PASS] Running PRISM051_DataConnectionCodegenPass0_0
[info    ] [PASS] Running PRISM052_FinalizePass0_0
[info    ] [PASS] Running PRISM053_FinalizeSnapshotPass0_0
[info    ] [PASS] Running PRISM054_VagExprCompilePass0_0
[info    ] [PASS] Running PRISM055_WatermarkPass0_0
[info    ] [PASS] Running PRISM056_OrphanUnitPass0_0
[info    ] [PASS] Running PRISM057_BoxFileGenPass0_0
[info    ] [PASS] Running PRISM058_P2pPass0_0
[info    ] [PASS] Running PRISM059_AsmIRPostPortAllocAsmTransformPass0_0
[info    ] [PASS] Running PRISM060_DataSocketAnnotationPass0_0
[info    ] [PASS] Running PRISM061_AuroraFileGenPass0_0
[info    ] [PASS] Running PRISM062_AsmLegalizerPass0_0
[info    ] [PASS] Running PRISM063_ExpectedPacketCountAnnotationPass0_0
[info    ] [PASS] Running PRISM064_ConnectionPatchPass0_0
[info    ] [PASS] Running PRISM065_AsmPlasticineCodegen0_0
[info    ] [PASS] Running PRISM066_ConnectionPatchPass0_0
[info    ] [PASS] Running PRISM067_PrintAsmPass_post_codegen0_0
[info    ] [PASS] Running PRISM068_PrintAsmPass_asm_ir_report0_0
[warning ] [../prism/src/plasma/lib/Core/Traversal/Analysis/RouteReportPass.cpp:34] Old report is not removed: /scratch/jobs/38941858/jit_out/jit_out_0_0.routes_report.txt
[info    ] [PASS] Running PRISM069_RouteReportPass0_0
[info    ] [PASS] Running PRISM070_AgcuFileGenPass0_0
[info    ] [PASS] Running PRISM071_CheckerPass0_0
[info    ] [PASS] Running PRISM072_ArgInsPass0_0
[info    ] [PASS] Running PRISM073_BitfileGenPass0_0
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin created
[info    ] [PASS] Running PRISM074_UtilizationFileGenPass0_0
[info    ] [PASS] Running PRISM075_PmuStatsPass0_0
[info    ] PMUStats: Writing /scratch/jobs/38941858/jit_out/jit_out_0_0.pmu_stat_info.csv
[info    ] PMUStats: Writing /scratch/jobs/38941858/jit_out/jit_out_0_0.pmu_stat_ctx_info.csv
[info    ] [PASS] Running PRISM076_PostProcessSectionsPass0_0
[info    ] Freeing memory for compilation phase 0__0
[info    ] Incremental Passes for Section(s) 0__0 Completed.
[info    ] Incremental Passes Completed.
[info    ] [PASS] Running PRISM077_SymInitFunctionsPass
[info    ] [PASS] Running PRISM078_DataAllocPass
[info    ] [PASS] Running PRISM079_HostFifoPass
[info    ] [PASS] Running PRISM080_HostFunctionPass
[info    ] [PASS] Running PRISM081_DebugFileGenPass
[info    ] [PASS] Running PRISM082_PefGenPass
[info    ] symbol log file /scratch/jobs/38941858/jit_out/jit_out.symbol.log created
[info    ] PEF file /scratch/jobs/38941858/jit_out/jit_out.pef created
[info    ] PEF log file /scratch/jobs/38941858/jit_out/jit_out.pef.log created
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin loaded
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin.slam created
[info    ] [PASS] Running PRISM083_DatafileGenPass
[info    ] datafile /scratch/jobs/38941858/jit_out/jit_out.data created
[info    ] Data log file /scratch/jobs/38941858/jit_out/jit_out.data.log created
[info    ] PnR node feedback file created /scratch/jobs/38941858/jit_out/jit_out.node_feedback.json
[info    ] PnR partition feedback file created /scratch/jobs/38941858/jit_out/jit_out.partition_feedback.json
[info    ] Global Passes Completed.
[arc:info] Generated debug_cpp files placed in: /scratch/jobs/38941858/jit_out/imcg_cpp/arc_gen/
[arc:info] Generated files placed in: /scratch/jobs/38941858/jit_out/arc_gen/
[arc:info] Compilation succeeded.
[mac:info] Mac Compilation succeeded.
[compiler:info] copy pef /scratch/jobs/38941858/jit_out/jit_out.pef to /scratch/jobs/38941858/jit_out/jit_out.0.pef
[compiler:info] Successfully compiled pef at /scratch/jobs/38941858/jit_out/jit_out.pef
[JITPerf] force_evaluate::CompilePEF 1134512563 ns
[JITPerf] force_evaluate::FilterInputs 20670 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 363506200 ns
[compiler:info] ============ PEF run finished and get tensors ========
[JITPerf] &JIT::construct 270 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] fill_ ...
[JITPerf] &JIT::construct 140 ns
[compiler:info] [torch_rdu] empty for size: {1, 2} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_backward_out ...
[JITPerf] &JIT::construct 400 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 71 ns
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d2f7f0 1 has_backanno: 0
[compiler:info] [torch_rdu]_log_softmax_backward_data ... self dims: {1, 2} grad_output dims: {1, 2} output dims: {1, 2} dim: 1 --  device_type: rdu:0 rdu:0 rdu:0
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_empty() 810 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 100 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750006430 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d61b10 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 11490682 ns
[JITPerf] &JIT::construct 120 ns
[JITPerf] &JIT::construct 40 ns
[JITPerf] &JIT::construct 50 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_rdu_tensor_impl() 269 ns
[JITPerf] update_ir() 2569 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 11710023 ns
[JITPerf] apply_binary() 11721033 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07740 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 1}
[compiler:info]   strides: {1, 2}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {2, 1} mat2 dims: {1, 16} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_empty() 190 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 50 ns
[JITPerf] &JIT::construct 70 ns
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 55710 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_rdu_tensor_impl() 140 ns
[JITPerf] update_ir() 950 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Permute"(%5) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %7 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %8 = "air.Matmul"(%6, %7) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 171691 ns
[JITPerf] apply_binary() 178571 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750006430 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750013730 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 16}
[compiler:info]   strides: {16, 1}
[compiler:info]   offset: 0
[compiler:info] RDU shallow_copy_and_detach &&0 0x55e630c07740 0 has_backanno: 0
[compiler:info] RDU shallow_copy_and_detach &0 0x7f4750013730 0 has_backanno: 0
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 160 ns
[JITPerf] get_rdu_tensor_impl() 260 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[JITPerf] &JIT::construct 160 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 80 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] extract_inputs_helper() 1181618 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_rdu_tensor_impl() 310 ns
[JITPerf] update_ir() 3410 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %3 = "air.Softmax"(%2) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Reciprocal"(%3) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Mul"(%1, %4) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.SoftmaxGrad"(%2, %5) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Permute"(%6) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %8 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %9 = "air.Matmul"(%7, %8) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %11 = "air.Permute"(%10) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %12 = "air.Collect"(%0, %11) {kConfigured = true, kLambda = @add_lambda1, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1641780 ns
[JITPerf] apply_binary_in_place() 1645110 ns
[JITPerf] &JIT::construct 90 ns
[compiler:info] [torch_rdu] Copy from: 0x55e630d61940 to: 0x55e632570a70
[compiler:info]   Source: 4 bytes with name  0x55e631d3f870
[compiler:info]   Dest: 4 bytes with name  0x0
[compiler:info] [torch_rdu_cpu_fallback] zero_ ...
[JITPerf] &JIT::construct 110 ns
[JITPerf] force_evaluate::RDUTensorImpl 440 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 65310 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %3 = "air.Softmax"(%2) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Reciprocal"(%3) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Mul"(%1, %4) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.SoftmaxGrad"(%2, %5) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Permute"(%6) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %8 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %9 = "air.Matmul"(%7, %8) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %11 = "air.Permute"(%10) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %12 = "air.Collect"(%0, %11) {kConfigured = true, kLambda = @add_lambda1, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    "air.Output"(%12) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
    "air.Output"(%9) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 190991 ns
[compiler:info] ====== HASH INFO: f046ae377bcf6c44aa83a0f450e085ac100df6714a291a29afd21032bcaaf781
[mac:warn] name collision detected for input_0
[mac:warn] name collision detected for input_1
[mac:warn] name collision detected for air_Softmax_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for air_Matmul_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for air_Output_0
[mac:warn] name collision detected for air_Output_1
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
MAC129_AIRResourceAwarePeepholeOptIter converged after 1 iteration(s)
MAC134_AIRToTLIRLoweringNestedLoopsIter converged after 0 iteration(s)
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
[info    ] Total per-section passes: 77
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out.s0.utilization_report.txt
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/stage_buffers/partition_latency_0_0.dot
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0_tln_traffic_report.txt
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0_bandwidth_statistics.txt
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0_bandwidth_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.node_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.detailed_pmu_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.detailed_pcu_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.template_names.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out.data
[info    ] Compiling graph for section 0
[mac:info] Building nameddims for graph jit_out
[mac:info] Analyze tiling for graph: jit_out
[mac:info] Mapping for graph jit_out
[mac:info] Set up stage ID and metapipe ID for section 0
[mac:info] MAC decided on the following section cuts for graph jit_out
[mac:info] Amortized resources overall: 1.300000e+01 PCUs, 5.700000e+01 PMUs, projected latency: 3.532945e-05 s, FLOPS: 4.302360e-06 T/s, DDR_BW: 6.115772e-03 GB/s
[mac:info] Lowering to TLIR succeeded.
[rail:info] Logs are generated in /scratch/jobs/38941858/jit_out//rail_gen//rail_compile_logs for partition_0_0_.
[rail:info] Compilation succeeded for partition_0_0_. Elapsed time:  112ms
[info    ] [PASS] Running PRISM000_PreProcessPass0_0
[info    ] Generated utilization report file: /scratch/jobs/38941858/jit_out/jit_out.s0.utilization_report.txt
[info    ] [PASS] Running PRISM001_FeedbackGenPass0_0
[info    ] [PASS] Running PRISM002_PlasmaIRPass0_0
[compiler:info] Starting Plasma compile at /scratch/jobs/38941858/jit_out/plasma_ir_modules/sections_0_0
[compiler:info] Plasma compile succeeded.
[compiler:info] Starting Plasma compile at /scratch/jobs/38941858/jit_out/plasma_ir_modules/schedule_0_0
[compiler:info] Plasma compile succeeded.
[info    ] [PASS] Running PRISM003_PlasmaIRSymbolAllocExportPass0_0
[info    ] [PASS] Running PRISM004_LegalizeUtilizationPass0_0
[info    ] [PASS] Running PRISM005_LegalizeSocketConnectionsPass0_0
[info    ] [PASS] Running PRISM006_LayoutConsolidationPass0_0
[info    ] [PASS] Running PRISM007_PmuLoadStoreSetupPass0_0
[info    ] [PASS] Running PRISM008_FinalizeIoPass0_0
[info    ] [PASS] Running PRISM009_CollectConnectionPass0_0
[info    ] [PASS] Running PRISM010_NetworkValidationPass0_0
[info    ] [PASS] Running PRISM011_DramAnalyticalReportPass0_0
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 1 reference_num_vector 1
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 1 reference_num_vector 1
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[info    ] Logging dram analysis report to /scratch/jobs/38941858/jit_out/prism_gen/reports/dram_analysis.json
[info    ] [PASS] Running PRISM012_AsmIRGenPNRConnectPass0_0
[info    ] [PASS] Running PRISM013_PrintLoweringPass0_0
[info    ] [PASS] Running PRISM014_AsmIRResourceAllocationPass0_0
[info    ] [PASS] Running PRISM015_PmuExprCompilePass0_0
[info    ] [PASS] Running PRISM016_GroupAnnotationPass0_0
[info    ] [PASS] Running PRISM017_TemplateDataflowGraphPass0_0
[info    ] [PASS] Running PRISM018_BoxUtilizationLegalizerPass0_0
[info    ] [PASS] Running PRISM019_LegalizePartitionAssignmentPass0_0
[info    ] [PASS] Running PRISM020_ConditionValidationPass0_0
[info    ] [PASS] Running PRISM021_AssignMetapipeStagePass0_0
[info    ] [PASS] Running PRISM022_AnalyticalModelFileGenPass0_0
[info    ] [PASS] Running PRISM023_PlasmaIRProgramStatePass0_0
[info    ] [PASS] Running PRISM024_MetapipeStageLatencyPass0_0
[info    ] Generated metapipe stage graph dot file: /scratch/jobs/38941858/jit_out/stage_buffers/partition_latency_0_0.dot
[info    ] [PASS] Running PRISM025_MetapipeStageGraphPass0_0
[info    ] [PASS] Running PRISM026_BandwidthAnnotationPass0_0
[warning ] [../prism/src/plasma/lib/Core/Traversal/Transform/BandwidthAnnotationPass.cpp:230] PMU data sink socket softmax_0_0_32_fwdprop_pinput_PMU PMU Context: WRITE, 0 @ (255, 255, 0, 0):<PMU_INFIFO.VECTOR_SW: 4> has computed bandwidth smaller than user annotated bandwidth:  computed ideal bandwidth = 0.4, annotated ideal bandwidth = 1
[warning ] [../prism/src/plasma/lib/Core/Traversal/Transform/BandwidthAnnotationPass.cpp:230] PMU data sink socket softmax_b_0_0_35_fwdprop_pinput_PMU PMU Context: WRITE, 0 @ (255, 255, 0, 0):<PMU_INFIFO.VECTOR_SW: 4> has computed bandwidth smaller than user annotated bandwidth:  computed ideal bandwidth = 0.4, annotated ideal bandwidth = 1
[info    ] BandwidthAnnotationPropagation log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM026_BandwidthAnnotationPass0_0.BWP.0.0.log
[info    ] BandwidthAnnotationPropagation log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM026_BandwidthAnnotationPass0_0.BWP.0.0.log
[info    ] 

============ Bandwidth QA Report ============

Total edges: 50
Bandwidth starving edges before pass (src/sink < 0.8): 25 (50%)
Bandwidth back pressure edges before pass (src/sink > 1.2): 21 (42%)
Missing source bandwidth after pass: 0 (0%)
Missing sink bandwidth after pass: 0 (0%)

[info    ] [PASS] Running PRISM027_FilePlacementPass_GenEdgeId0_0
[info    ] [PASS] Running PRISM028_FloorplanPass0_0
[info    ] Floorplanning log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM028_FloorplanPass0_0.FP.0.0.log
[info    ] [PASS] Running PRISM029_VagAllocPass0_0
[info    ] [PASS] Running PRISM030_AsmIRPrePortAllocAsmTransformPass0_0
[info    ] [PASS MANAGER] Start PnR
[info    ] [PASS] Running PRISM031_PlacerPass0_0
[info    ] Prism config stored in: /scratch/jobs/38941858/jit_out/jit_out.configs
[info    ] Launching placement flow with (set) 1 threads
[info    ] BoxPlanner log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.BP.0.0.log
[info    ] WavefrontPlacer log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.DFG.0.0.log
[info    ] SAPlacer log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.SA.0.0.log
[info    ] Placement runtime:	partition{0, 0}: 1s	
[info    ] [PASS] Running PRISM032_PmuTwinPass0_0
[info    ] [PASS] Running PRISM033_TemplateTileDoneLoweringPass0_0
[info    ] [PASS] Running PRISM034_VagConfigurePass0_0
[info    ] [PASS] Running PRISM035_VagAllocReportPass0_0
[info    ] [PASS] Running PRISM036_DataPortAllocatorPass0_0
[info    ] [PASS] Running PRISM037_AgcuOrchestrationPass0_0
[info    ] [PASS] Running PRISM038_RampControlPass0_0
[info    ] [PASS] Running PRISM039_E2EInjectionPass0_0
[info    ] [PASS] Running PRISM040_InstrumentationPreprocessPass0_0
[info    ] [PASS] Running PRISM041_BarrierLoweringPass0_0
[info    ] [PASS] Running PRISM042_ControlPortAllocatorPass0_0
[info    ] [PASS] Running PRISM043_ControlBandwidthAnnotationPass0_0
[info    ] [PASS] Running PRISM044_InstrumentationCounterPass0_0
[info    ] [PASS] Running PRISM045_ControlPortAllocatorPass0_0
[info    ] [PASS] Running PRISM046_ControlConnectorPass0_0
[info    ] [PASS] Running PRISM047_DataConnectorPass0_0
[info    ] [PASS MANAGER] Done with PnR
[info    ] [PASS] Running PRISM048_BandwidthReportPass0_0
[info    ] BandwidthReport log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM048_BandwidthReportPass0_0.VECTOR.0.0.log
[info    ] BandwidthReport log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM048_BandwidthReportPass0_0.SCALAR.0.0.log
[info    ] [PASS] Running PRISM049_FeedbackGenPass0_0
[info    ] [PASS] Running PRISM050_ControlConnectionCodegenPass0_0
[info    ] [PASS] Running PRISM051_DataConnectionCodegenPass0_0
[info    ] [PASS] Running PRISM052_FinalizePass0_0
[info    ] [PASS] Running PRISM053_FinalizeSnapshotPass0_0
[info    ] [PASS] Running PRISM054_VagExprCompilePass0_0
[info    ] [PASS] Running PRISM055_WatermarkPass0_0
[info    ] [PASS] Running PRISM056_OrphanUnitPass0_0
[info    ] [PASS] Running PRISM057_BoxFileGenPass0_0
[info    ] [PASS] Running PRISM058_P2pPass0_0
[info    ] [PASS] Running PRISM059_AsmIRPostPortAllocAsmTransformPass0_0
[info    ] [PASS] Running PRISM060_DataSocketAnnotationPass0_0
[info    ] [PASS] Running PRISM061_AuroraFileGenPass0_0
[info    ] [PASS] Running PRISM062_AsmLegalizerPass0_0
[info    ] [PASS] Running PRISM063_ExpectedPacketCountAnnotationPass0_0
[info    ] [PASS] Running PRISM064_ConnectionPatchPass0_0
[info    ] [PASS] Running PRISM065_AsmPlasticineCodegen0_0
[info    ] [PASS] Running PRISM066_ConnectionPatchPass0_0
[info    ] [PASS] Running PRISM067_PrintAsmPass_post_codegen0_0
[info    ] [PASS] Running PRISM068_PrintAsmPass_asm_ir_report0_0
[info    ] [PASS] Running PRISM069_RouteReportPass0_0
[info    ] [PASS] Running PRISM070_AgcuFileGenPass0_0
[info    ] [PASS] Running PRISM071_CheckerPass0_0
[info    ] [PASS] Running PRISM072_ArgInsPass0_0
[info    ] [PASS] Running PRISM073_BitfileGenPass0_0
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin created
[info    ] [PASS] Running PRISM074_UtilizationFileGenPass0_0
[info    ] [PASS] Running PRISM075_PmuStatsPass0_0
[info    ] PMUStats: Writing /scratch/jobs/38941858/jit_out/jit_out_0_0.pmu_stat_info.csv
[info    ] PMUStats: Writing /scratch/jobs/38941858/jit_out/jit_out_0_0.pmu_stat_ctx_info.csv
[info    ] [PASS] Running PRISM076_PostProcessSectionsPass0_0
[info    ] Freeing memory for compilation phase 0__0
[info    ] Incremental Passes for Section(s) 0__0 Completed.
[info    ] Incremental Passes Completed.
[info    ] [PASS] Running PRISM077_SymInitFunctionsPass
[info    ] [PASS] Running PRISM078_DataAllocPass
[info    ] [PASS] Running PRISM079_HostFifoPass
[info    ] [PASS] Running PRISM080_HostFunctionPass
[info    ] [PASS] Running PRISM081_DebugFileGenPass
[info    ] [PASS] Running PRISM082_PefGenPass
[info    ] symbol log file /scratch/jobs/38941858/jit_out/jit_out.symbol.log created
[info    ] PEF file /scratch/jobs/38941858/jit_out/jit_out.pef created
[info    ] PEF log file /scratch/jobs/38941858/jit_out/jit_out.pef.log created
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin loaded
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin.slam created
[info    ] [PASS] Running PRISM083_DatafileGenPass
[info    ] datafile /scratch/jobs/38941858/jit_out/jit_out.data created
[info    ] Data log file /scratch/jobs/38941858/jit_out/jit_out.data.log created
[info    ] PnR node feedback file created /scratch/jobs/38941858/jit_out/jit_out.node_feedback.json
[info    ] PnR partition feedback file created /scratch/jobs/38941858/jit_out/jit_out.partition_feedback.json
[info    ] Global Passes Completed.
[arc:info] Generated debug_cpp files placed in: /scratch/jobs/38941858/jit_out/imcg_cpp/arc_gen/
[arc:info] Generated files placed in: /scratch/jobs/38941858/jit_out/arc_gen/
[arc:info] Compilation succeeded.
[mac:info] Mac Compilation succeeded.
[compiler:info] copy pef /scratch/jobs/38941858/jit_out/jit_out.pef to /scratch/jobs/38941858/jit_out/jit_out.1.pef
[compiler:info] Successfully compiled pef at /scratch/jobs/38941858/jit_out/jit_out.pef
[JITPerf] force_evaluate::CompilePEF 2508515062 ns
[JITPerf] force_evaluate::FilterInputs 24551 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 359552574 ns
[compiler:info] ============ PEF run finished and get tensors ========
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {1, 16} mat2 dims: {16, 2} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 290 ns
[JITPerf] get_empty() 890 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 100 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d975d0 1 has_backanno: 0
[JITPerf] &JIT::construct 90 ns
[JITPerf] extract_inputs_helper() 4945041 ns
[JITPerf] &JIT::construct 40 ns
[JITPerf] get_rdu_tensor_impl() 90 ns
[JITPerf] update_ir() 1430 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 5042281 ns
[JITPerf] apply_binary() 5053181 ns
[compiler:info] [torch_rdu] _log_softmax ...
[JITPerf] &JIT::construct 69 ns
[JITPerf] get_empty() 120 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 30 ns
[JITPerf] extract_inputs_helper() 1250 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] get_rdu_tensor_impl() 60 ns
[JITPerf] update_ir() 580 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_unary() 74160 ns
[JITPerf] apply_unary_out() 78780 ns
[compiler:info] RDU shallow_copy_and_detach &1 0x55e630d975d0 0 has_backanno: 0
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_forward_out ...
[JITPerf] &JIT::construct 30 ns
[JITPerf] force_evaluate::RDUTensorImpl 140 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 24320 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    "air.Output"(%3) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
    "air.Output"(%5) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 52531 ns
[compiler:info] ====== HASH INFO: dab861f9d5b500e2257da57984b94ffe395ce7cef116e21c831abf556923e098
[compiler:info] Found cached PEF!!! /scratch/jobs/38941858/jit_out/jit_out.0.pef
[JITPerf] force_evaluate::CompilePEF 98581 ns
[JITPerf] force_evaluate::FilterInputs 27020 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 358339037 ns
[compiler:info] ============ PEF run finished and get tensors ========
[JITPerf] &JIT::construct 240 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] fill_ ...
[JITPerf] &JIT::construct 69 ns
[compiler:info] [torch_rdu] empty for size: {1, 2} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_backward_out ...
[JITPerf] &JIT::construct 211 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631a57c30 1 has_backanno: 0
[compiler:info] [torch_rdu]_log_softmax_backward_data ... self dims: {1, 2} grad_output dims: {1, 2} output dims: {1, 2} dim: 1 --  device_type: rdu:0 rdu:0 rdu:0
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_empty() 310 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 100 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07740 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e6326b6b30 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 910096 ns
[JITPerf] &JIT::construct 130 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 90 ns
[JITPerf] get_rdu_tensor_impl() 150 ns
[JITPerf] update_ir() 1860 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1098477 ns
[JITPerf] apply_binary() 1107217 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d975d0 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 1}
[compiler:info]   strides: {1, 2}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {2, 1} mat2 dims: {1, 16} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 100 ns
[JITPerf] get_empty() 250 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 70 ns
[JITPerf] &JIT::construct 80 ns
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 58911 ns
[JITPerf] &JIT::construct 90 ns
[JITPerf] get_rdu_tensor_impl() 150 ns
[JITPerf] update_ir() 1270 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Permute"(%5) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %7 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %8 = "air.Matmul"(%6, %7) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 204231 ns
[JITPerf] apply_binary() 213221 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07740 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750013730 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 16}
[compiler:info]   strides: {16, 1}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_rdu_tensor_impl() 150 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d2f7f0 1 has_backanno: 0
[JITPerf] &JIT::construct 100 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] extract_inputs_helper() 804745 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 180 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] update_ir() 52210 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 2 : i64, sym_name = "add_lambda1", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %3 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Softmax"(%4) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Reciprocal"(%5) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Mul"(%3, %6) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.SoftmaxGrad"(%4, %7) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.Permute"(%8) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %10 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %11 = "air.Matmul"(%9, %10) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %12 = "air.Permute"(%11) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %14 = "air.Collect"(%2, %13) {kConfigured = true, kLambda = @add_lambda1, kMacInfoName = "collect_default", kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %16 = "air.Permute"(%14) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%16) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1266508 ns
[JITPerf] apply_binary_in_place() 1269388 ns
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 220 ns
[JITPerf] get_rdu_tensor_impl() 460 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[JITPerf] &JIT::construct 100 ns
[JITPerf] &JIT::construct 51 ns
[JITPerf] &JIT::construct 51 ns
[JITPerf] &JIT::construct 51 ns
[JITPerf] &JIT::construct 49 ns
[JITPerf] &JIT::construct 51 ns
[JITPerf] &JIT::construct 51 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 50 ns
[JITPerf] &JIT::construct 50 ns
[JITPerf] &JIT::construct 40 ns
[JITPerf] &JIT::construct 50 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 50 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] extract_inputs_helper() 1061286 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 31 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 29 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] get_rdu_tensor_impl() 130 ns
[JITPerf] update_ir() 1950 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda2", type = () -> ()} : () -> ()
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1_0", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Permute"(%2) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %6 = "air.Softmax"(%5) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Reciprocal"(%6) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.Mul"(%4, %7) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.SoftmaxGrad"(%5, %8) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %11 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %12 = "air.Matmul"(%10, %11) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %14 = "air.Permute"(%13) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Collect"(%3, %14) {kConfigured = true, kLambda = @add_lambda1_0, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %16 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%15) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %18 = "air.Permute"(%17) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %19 = "air.Permute"(%18) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %20 = "air.Permute"(%19) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %21 = "air.Collect"(%0, %20) {kConfigured = true, kLambda = @add_lambda2, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1302268 ns
[JITPerf] apply_binary_in_place() 1304077 ns
[JITPerf] &JIT::construct 40 ns
[compiler:info] [torch_rdu] Copy from: 0x55e631f38dd0 to: 0x55e6328d9ce0
[compiler:info]   Source: 4 bytes with name  0x55e631135160
[compiler:info]   Dest: 4 bytes with name  0x0
[compiler:info] [torch_rdu_cpu_fallback] zero_ ...
[JITPerf] &JIT::construct 50 ns
[JITPerf] force_evaluate::RDUTensorImpl 170 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 27281 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda2", type = () -> ()} : () -> ()
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1_0", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Permute"(%2) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %6 = "air.Softmax"(%5) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Reciprocal"(%6) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.Mul"(%4, %7) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.SoftmaxGrad"(%5, %8) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %11 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %12 = "air.Matmul"(%10, %11) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %14 = "air.Permute"(%13) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Collect"(%3, %14) {kConfigured = true, kLambda = @add_lambda1_0, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %16 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%15) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %18 = "air.Permute"(%17) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %19 = "air.Permute"(%18) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %20 = "air.Permute"(%19) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %21 = "air.Collect"(%0, %20) {kConfigured = true, kLambda = @add_lambda2, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    "air.Output"(%21) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
    "air.Output"(%18) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 114620 ns
[compiler:info] ====== HASH INFO: 38fa44a6a222f52653b5d1dc447eda7c4e2bf85d29695732ea966ce2c91e68b3
[mac:warn] name collision detected for input_0
[mac:warn] name collision detected for input_1
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for input_2
[mac:warn] name collision detected for input_3
[mac:warn] name collision detected for air_Softmax_0
[mac:warn] name collision detected for air_Reciprocal_0
[mac:warn] name collision detected for air_Mul_0
[mac:warn] name collision detected for air_SoftmaxGrad_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for air_Matmul_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for air_Collect_0
[mac:warn] name collision detected for air_Collect_0_unary
[mac:warn] name collision detected for air_Collect_0_binary1
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for Permute_2
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_0
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for Permute_1
[mac:warn] name collision detected for air_Output_0
[mac:warn] name collision detected for air_Output_1
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
MAC208_AIRResourceAwarePeepholeOptIter converged after 1 iteration(s)
MAC213_AIRToTLIRLoweringNestedLoopsIter converged after 0 iteration(s)
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
Updated RegionView start borders for 0 slice groups.
[info    ] Total per-section passes: 77
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out.s0.utilization_report.txt
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/stage_buffers/partition_latency_0_0.dot
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0_tln_traffic_report.txt
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0_bandwidth_statistics.txt
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0_bandwidth_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.node_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.detailed_pmu_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.detailed_pcu_statistics.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out_0_0.template_names.csv
[info    ] Removed artifact file: /scratch/jobs/38941858/jit_out/jit_out.data
[info    ] Compiling graph for section 0
[mac:info] Building nameddims for graph jit_out
[mac:info] Analyze tiling for graph: jit_out
[mac:info] Mapping for graph jit_out
[mac:info] Set up stage ID and metapipe ID for section 0
[mac:info] MAC decided on the following section cuts for graph jit_out
[mac:info] Amortized resources overall: 1.400000e+01 PCUs, 8.400000e+01 PMUs, projected latency: 3.537011e-05 s, FLOPS: 5.202133e-06 T/s, DDR_BW: 7.793912e-03 GB/s
[mac:info] Lowering to TLIR succeeded.
[rail:info] Logs are generated in /scratch/jobs/38941858/jit_out//rail_gen//rail_compile_logs for partition_0_0_.
[rail:info] Compilation succeeded for partition_0_0_. Elapsed time:  179ms
[info    ] [PASS] Running PRISM000_PreProcessPass0_0
[info    ] Generated utilization report file: /scratch/jobs/38941858/jit_out/jit_out.s0.utilization_report.txt
[info    ] [PASS] Running PRISM001_FeedbackGenPass0_0
[info    ] [PASS] Running PRISM002_PlasmaIRPass0_0
[compiler:info] Starting Plasma compile at /scratch/jobs/38941858/jit_out/plasma_ir_modules/sections_0_0
[compiler:info] Plasma compile succeeded.
[compiler:info] Starting Plasma compile at /scratch/jobs/38941858/jit_out/plasma_ir_modules/schedule_0_0
[compiler:info] Plasma compile succeeded.
[info    ] [PASS] Running PRISM003_PlasmaIRSymbolAllocExportPass0_0
[info    ] [PASS] Running PRISM004_LegalizeUtilizationPass0_0
[info    ] [PASS] Running PRISM005_LegalizeSocketConnectionsPass0_0
[info    ] [PASS] Running PRISM006_LayoutConsolidationPass0_0
[info    ] [PASS] Running PRISM007_PmuLoadStoreSetupPass0_0
[info    ] [PASS] Running PRISM008_FinalizeIoPass0_0
[info    ] [PASS] Running PRISM009_CollectConnectionPass0_0
[info    ] [PASS] Running PRISM010_NetworkValidationPass0_0
[info    ] [PASS] Running PRISM011_DramAnalyticalReportPass0_0
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 1 reference_num_vector 1
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 1 reference_num_vector 1
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[warning ] [../prism/src/plasma/lib/Core/Unit/Agcu.cpp:2506] Large dram analysis difference: num_vector_with_request_length_overhead 8 num_vector_without_request_length_overhead 2 reference_num_vector 2
[info    ] Logging dram analysis report to /scratch/jobs/38941858/jit_out/prism_gen/reports/dram_analysis.json
[info    ] [PASS] Running PRISM012_AsmIRGenPNRConnectPass0_0
[info    ] [PASS] Running PRISM013_PrintLoweringPass0_0
[info    ] [PASS] Running PRISM014_AsmIRResourceAllocationPass0_0
[info    ] [PASS] Running PRISM015_PmuExprCompilePass0_0
[info    ] [PASS] Running PRISM016_GroupAnnotationPass0_0
[info    ] [PASS] Running PRISM017_TemplateDataflowGraphPass0_0
[info    ] [PASS] Running PRISM018_BoxUtilizationLegalizerPass0_0
[info    ] [PASS] Running PRISM019_LegalizePartitionAssignmentPass0_0
[info    ] [PASS] Running PRISM020_ConditionValidationPass0_0
[info    ] [PASS] Running PRISM021_AssignMetapipeStagePass0_0
[info    ] [PASS] Running PRISM022_AnalyticalModelFileGenPass0_0
[info    ] [PASS] Running PRISM023_PlasmaIRProgramStatePass0_0
[info    ] [PASS] Running PRISM024_MetapipeStageLatencyPass0_0
[info    ] Generated metapipe stage graph dot file: /scratch/jobs/38941858/jit_out/stage_buffers/partition_latency_0_0.dot
[info    ] [PASS] Running PRISM025_MetapipeStageGraphPass0_0
[info    ] [PASS] Running PRISM026_BandwidthAnnotationPass0_0
[warning ] [../prism/src/plasma/lib/Core/Traversal/Transform/BandwidthAnnotationPass.cpp:230] PMU data sink socket softmax_0_0_38_fwdprop_pinput_PMU PMU Context: WRITE, 0 @ (255, 255, 0, 0):<PMU_INFIFO.VECTOR_SW: 4> has computed bandwidth smaller than user annotated bandwidth:  computed ideal bandwidth = 0.4, annotated ideal bandwidth = 1
[warning ] [../prism/src/plasma/lib/Core/Traversal/Transform/BandwidthAnnotationPass.cpp:230] PMU data sink socket softmax_b_0_0_41_fwdprop_pinput_PMU PMU Context: WRITE, 0 @ (255, 255, 0, 0):<PMU_INFIFO.VECTOR_SW: 4> has computed bandwidth smaller than user annotated bandwidth:  computed ideal bandwidth = 0.4, annotated ideal bandwidth = 1
[info    ] BandwidthAnnotationPropagation log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM026_BandwidthAnnotationPass0_0.BWP.0.0.log
[info    ] BandwidthAnnotationPropagation log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM026_BandwidthAnnotationPass0_0.BWP.0.0.log
[info    ] 

============ Bandwidth QA Report ============

Total edges: 55
Bandwidth starving edges before pass (src/sink < 0.8): 27 (49.0909%)
Bandwidth back pressure edges before pass (src/sink > 1.2): 24 (43.6364%)
Missing source bandwidth after pass: 0 (0%)
Missing sink bandwidth after pass: 0 (0%)

[info    ] [PASS] Running PRISM027_FilePlacementPass_GenEdgeId0_0
[info    ] [PASS] Running PRISM028_FloorplanPass0_0
[info    ] Floorplanning log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM028_FloorplanPass0_0.FP.0.0.log
[info    ] [PASS] Running PRISM029_VagAllocPass0_0
[info    ] [PASS] Running PRISM030_AsmIRPrePortAllocAsmTransformPass0_0
[info    ] [PASS MANAGER] Start PnR
[info    ] [PASS] Running PRISM031_PlacerPass0_0
[info    ] Prism config stored in: /scratch/jobs/38941858/jit_out/jit_out.configs
[info    ] Launching placement flow with (set) 1 threads
[info    ] BoxPlanner log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.BP.0.0.log
[info    ] WavefrontPlacer log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.DFG.0.0.log
[info    ] SAPlacer log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM031_PlacerPass0_0.SA.0.0.log
[info    ] Placement runtime:	partition{0, 0}: 2s	
[info    ] [PASS] Running PRISM032_PmuTwinPass0_0
[info    ] [PASS] Running PRISM033_TemplateTileDoneLoweringPass0_0
[info    ] [PASS] Running PRISM034_VagConfigurePass0_0
[info    ] [PASS] Running PRISM035_VagAllocReportPass0_0
[info    ] [PASS] Running PRISM036_DataPortAllocatorPass0_0
[info    ] [PASS] Running PRISM037_AgcuOrchestrationPass0_0
[info    ] [PASS] Running PRISM038_RampControlPass0_0
[info    ] [PASS] Running PRISM039_E2EInjectionPass0_0
[info    ] [PASS] Running PRISM040_InstrumentationPreprocessPass0_0
[info    ] [PASS] Running PRISM041_BarrierLoweringPass0_0
[info    ] [PASS] Running PRISM042_ControlPortAllocatorPass0_0
[info    ] [PASS] Running PRISM043_ControlBandwidthAnnotationPass0_0
[info    ] [PASS] Running PRISM044_InstrumentationCounterPass0_0
[info    ] [PASS] Running PRISM045_ControlPortAllocatorPass0_0
[info    ] [PASS] Running PRISM046_ControlConnectorPass0_0
[info    ] [PASS] Running PRISM047_DataConnectorPass0_0
[info    ] [PASS MANAGER] Done with PnR
[info    ] [PASS] Running PRISM048_BandwidthReportPass0_0
[info    ] BandwidthReport log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM048_BandwidthReportPass0_0.VECTOR.0.0.log
[info    ] BandwidthReport log for Partition{0, 0}: /scratch/jobs/38941858/jit_out/prism_gen/plasma_compile_logs/PRISM048_BandwidthReportPass0_0.SCALAR.0.0.log
[info    ] [PASS] Running PRISM049_FeedbackGenPass0_0
[info    ] [PASS] Running PRISM050_ControlConnectionCodegenPass0_0
[info    ] [PASS] Running PRISM051_DataConnectionCodegenPass0_0
[info    ] [PASS] Running PRISM052_FinalizePass0_0
[info    ] [PASS] Running PRISM053_FinalizeSnapshotPass0_0
[info    ] [PASS] Running PRISM054_VagExprCompilePass0_0
[info    ] [PASS] Running PRISM055_WatermarkPass0_0
[info    ] [PASS] Running PRISM056_OrphanUnitPass0_0
[info    ] [PASS] Running PRISM057_BoxFileGenPass0_0
[info    ] [PASS] Running PRISM058_P2pPass0_0
[info    ] [PASS] Running PRISM059_AsmIRPostPortAllocAsmTransformPass0_0
[info    ] [PASS] Running PRISM060_DataSocketAnnotationPass0_0
[info    ] [PASS] Running PRISM061_AuroraFileGenPass0_0
[info    ] [PASS] Running PRISM062_AsmLegalizerPass0_0
[info    ] [PASS] Running PRISM063_ExpectedPacketCountAnnotationPass0_0
[info    ] [PASS] Running PRISM064_ConnectionPatchPass0_0
[info    ] [PASS] Running PRISM065_AsmPlasticineCodegen0_0
[info    ] [PASS] Running PRISM066_ConnectionPatchPass0_0
[info    ] [PASS] Running PRISM067_PrintAsmPass_post_codegen0_0
[info    ] [PASS] Running PRISM068_PrintAsmPass_asm_ir_report0_0
[info    ] [PASS] Running PRISM069_RouteReportPass0_0
[info    ] [PASS] Running PRISM070_AgcuFileGenPass0_0
[info    ] [PASS] Running PRISM071_CheckerPass0_0
[info    ] [PASS] Running PRISM072_ArgInsPass0_0
[info    ] [PASS] Running PRISM073_BitfileGenPass0_0
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin created
[info    ] [PASS] Running PRISM074_UtilizationFileGenPass0_0
[info    ] [PASS] Running PRISM075_PmuStatsPass0_0
[info    ] PMUStats: Writing /scratch/jobs/38941858/jit_out/jit_out_0_0.pmu_stat_info.csv
[info    ] PMUStats: Writing /scratch/jobs/38941858/jit_out/jit_out_0_0.pmu_stat_ctx_info.csv
[info    ] [PASS] Running PRISM076_PostProcessSectionsPass0_0
[info    ] Freeing memory for compilation phase 0__0
[info    ] Incremental Passes for Section(s) 0__0 Completed.
[info    ] Incremental Passes Completed.
[info    ] [PASS] Running PRISM077_SymInitFunctionsPass
[info    ] [PASS] Running PRISM078_DataAllocPass
[info    ] [PASS] Running PRISM079_HostFifoPass
[info    ] [PASS] Running PRISM080_HostFunctionPass
[info    ] [PASS] Running PRISM081_DebugFileGenPass
[info    ] [PASS] Running PRISM082_PefGenPass
[info    ] symbol log file /scratch/jobs/38941858/jit_out/jit_out.symbol.log created
[info    ] PEF file /scratch/jobs/38941858/jit_out/jit_out.pef created
[info    ] PEF log file /scratch/jobs/38941858/jit_out/jit_out.pef.log created
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin loaded
[info    ] bitfile /scratch/jobs/38941858/jit_out/jit_out.bin.slam created
[info    ] [PASS] Running PRISM083_DatafileGenPass
[info    ] datafile /scratch/jobs/38941858/jit_out/jit_out.data created
[info    ] Data log file /scratch/jobs/38941858/jit_out/jit_out.data.log created
[info    ] PnR node feedback file created /scratch/jobs/38941858/jit_out/jit_out.node_feedback.json
[info    ] PnR partition feedback file created /scratch/jobs/38941858/jit_out/jit_out.partition_feedback.json
[info    ] Global Passes Completed.
[arc:info] Generated debug_cpp files placed in: /scratch/jobs/38941858/jit_out/imcg_cpp/arc_gen/
[arc:info] Generated files placed in: /scratch/jobs/38941858/jit_out/arc_gen/
[arc:info] Compilation succeeded.
[mac:info] Mac Compilation succeeded.
[compiler:info] copy pef /scratch/jobs/38941858/jit_out/jit_out.pef to /scratch/jobs/38941858/jit_out/jit_out.2.pef
[compiler:info] Successfully compiled pef at /scratch/jobs/38941858/jit_out/jit_out.pef
[JITPerf] force_evaluate::CompilePEF 2920339473 ns
[JITPerf] force_evaluate::FilterInputs 25490 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 387776751 ns
[compiler:info] ============ PEF run finished and get tensors ========
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {1, 16} mat2 dims: {16, 2} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 311 ns
[JITPerf] get_empty() 880 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 80 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631d4d5f0 1 has_backanno: 0
[JITPerf] &JIT::construct 190 ns
[JITPerf] extract_inputs_helper() 13397623 ns
[JITPerf] &JIT::construct 40 ns
[JITPerf] get_rdu_tensor_impl() 169 ns
[JITPerf] update_ir() 2229 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 14404810 ns
[JITPerf] apply_binary() 14416890 ns
[compiler:info] [torch_rdu] _log_softmax ...
[JITPerf] &JIT::construct 150 ns
[JITPerf] get_empty() 220 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 80 ns
[JITPerf] extract_inputs_helper() 2610 ns
[JITPerf] &JIT::construct 51 ns
[JITPerf] &JIT::construct 51 ns
[JITPerf] get_rdu_tensor_impl() 100 ns
[JITPerf] update_ir() 1229 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_unary() 141011 ns
[JITPerf] apply_unary_out() 150131 ns
[compiler:info] RDU shallow_copy_and_detach &1 0x55e631d4d5f0 0 has_backanno: 0
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_forward_out ...
[JITPerf] &JIT::construct 110 ns
[JITPerf] force_evaluate::RDUTensorImpl 210 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 45860 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    "air.Output"(%3) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
    "air.Output"(%5) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 93441 ns
[compiler:info] ====== HASH INFO: dab861f9d5b500e2257da57984b94ffe395ce7cef116e21c831abf556923e098
[compiler:info] Found cached PEF!!! /scratch/jobs/38941858/jit_out/jit_out.0.pef
[JITPerf] force_evaluate::CompilePEF 162711 ns
[JITPerf] force_evaluate::FilterInputs 31950 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 368093668 ns
[compiler:info] ============ PEF run finished and get tensors ========
[JITPerf] &JIT::construct 230 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] fill_ ...
[JITPerf] &JIT::construct 100 ns
[compiler:info] [torch_rdu] empty for size: {1, 2} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_backward_out ...
[JITPerf] &JIT::construct 220 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630e25e80 1 has_backanno: 0
[compiler:info] [torch_rdu]_log_softmax_backward_data ... self dims: {1, 2} grad_output dims: {1, 2} output dims: {1, 2} dim: 1 --  device_type: rdu:0 rdu:0 rdu:0
[JITPerf] &JIT::construct 120 ns
[JITPerf] get_empty() 330 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 150 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d975d0 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e633054780 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 968086 ns
[JITPerf] &JIT::construct 110 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_rdu_tensor_impl() 280 ns
[JITPerf] update_ir() 1880 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1164077 ns
[JITPerf] apply_binary() 1173537 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631d4d5f0 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 1}
[compiler:info]   strides: {1, 2}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {2, 1} mat2 dims: {1, 16} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 120 ns
[JITPerf] get_empty() 280 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 89 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 64561 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 120 ns
[JITPerf] update_ir() 1430 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Permute"(%5) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %7 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %8 = "air.Matmul"(%6, %7) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 229411 ns
[JITPerf] apply_binary() 239611 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d975d0 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631a57c30 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 16}
[compiler:info]   strides: {16, 1}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 90 ns
[JITPerf] get_rdu_tensor_impl() 190 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d2f7f0 1 has_backanno: 0
[JITPerf] &JIT::construct 130 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 70 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] extract_inputs_helper() 887266 ns
[JITPerf] &JIT::construct 110 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 131 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 360 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] update_ir() 45390 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 2 : i64, sym_name = "add_lambda1", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %3 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Softmax"(%4) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Reciprocal"(%5) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Mul"(%3, %6) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.SoftmaxGrad"(%4, %7) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.Permute"(%8) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %10 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %11 = "air.Matmul"(%9, %10) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %12 = "air.Permute"(%11) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %14 = "air.Collect"(%2, %13) {kConfigured = true, kLambda = @add_lambda1, kMacInfoName = "collect_default", kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %16 = "air.Permute"(%14) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%16) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1856612 ns
[JITPerf] apply_binary_in_place() 1859932 ns
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 250 ns
[JITPerf] get_rdu_tensor_impl() 440 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[JITPerf] &JIT::construct 160 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 69 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] extract_inputs_helper() 1193548 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 371 ns
[JITPerf] update_ir() 3080 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda2", type = () -> ()} : () -> ()
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1_0", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Permute"(%2) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %6 = "air.Softmax"(%5) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Reciprocal"(%6) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.Mul"(%4, %7) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.SoftmaxGrad"(%5, %8) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %11 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %12 = "air.Matmul"(%10, %11) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %14 = "air.Permute"(%13) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Collect"(%3, %14) {kConfigured = true, kLambda = @add_lambda1_0, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %16 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%15) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %18 = "air.Permute"(%17) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %19 = "air.Permute"(%18) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %20 = "air.Permute"(%19) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %21 = "air.Collect"(%0, %20) {kConfigured = true, kLambda = @add_lambda2, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1617210 ns
[JITPerf] apply_binary_in_place() 1620780 ns
[JITPerf] &JIT::construct 110 ns
[compiler:info] [torch_rdu] Copy from: 0x55e630fd62a0 to: 0x55e6311b0400
[compiler:info]   Source: 4 bytes with name  0x55e631435b40
[compiler:info]   Dest: 4 bytes with name  0x0
[compiler:info] [torch_rdu_cpu_fallback] zero_ ...
[JITPerf] &JIT::construct 120 ns
[JITPerf] force_evaluate::RDUTensorImpl 300 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 56320 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda2", type = () -> ()} : () -> ()
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1_0", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Permute"(%2) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %6 = "air.Softmax"(%5) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Reciprocal"(%6) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.Mul"(%4, %7) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.SoftmaxGrad"(%5, %8) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %11 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %12 = "air.Matmul"(%10, %11) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %14 = "air.Permute"(%13) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Collect"(%3, %14) {kConfigured = true, kLambda = @add_lambda1_0, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %16 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%15) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %18 = "air.Permute"(%17) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %19 = "air.Permute"(%18) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %20 = "air.Permute"(%19) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %21 = "air.Collect"(%0, %20) {kConfigured = true, kLambda = @add_lambda2, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    "air.Output"(%21) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
    "air.Output"(%18) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 243182 ns
[compiler:info] ====== HASH INFO: 38fa44a6a222f52653b5d1dc447eda7c4e2bf85d29695732ea966ce2c91e68b3
[compiler:info] Found cached PEF!!! /scratch/jobs/38941858/jit_out/jit_out.2.pef
[JITPerf] force_evaluate::CompilePEF 424053 ns
[JITPerf] force_evaluate::FilterInputs 61060 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 364930058 ns
[compiler:info] ============ PEF run finished and get tensors ========
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {1, 16} mat2 dims: {16, 2} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 290 ns
[JITPerf] get_empty() 900 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 110 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630e25e80 1 has_backanno: 0
[JITPerf] &JIT::construct 190 ns
[JITPerf] extract_inputs_helper() 1209348 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 190 ns
[JITPerf] update_ir() 2660 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1376779 ns
[JITPerf] apply_binary() 1390389 ns
[compiler:info] [torch_rdu] _log_softmax ...
[JITPerf] &JIT::construct 90 ns
[JITPerf] get_empty() 270 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 80 ns
[JITPerf] extract_inputs_helper() 2220 ns
[JITPerf] &JIT::construct 80 ns
[JITPerf] &JIT::construct 71 ns
[JITPerf] get_rdu_tensor_impl() 140 ns
[JITPerf] update_ir() 1140 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_unary() 147021 ns
[JITPerf] apply_unary_out() 157121 ns
[compiler:info] RDU shallow_copy_and_detach &1 0x55e630e25e80 0 has_backanno: 0
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_forward_out ...
[JITPerf] &JIT::construct 80 ns
[JITPerf] force_evaluate::RDUTensorImpl 309 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 50541 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    "air.Output"(%3) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
    "air.Output"(%5) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 111371 ns
[compiler:info] ====== HASH INFO: dab861f9d5b500e2257da57984b94ffe395ce7cef116e21c831abf556923e098
[compiler:info] Found cached PEF!!! /scratch/jobs/38941858/jit_out/jit_out.0.pef
[JITPerf] force_evaluate::CompilePEF 229721 ns
[JITPerf] force_evaluate::FilterInputs 38750 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 370946506 ns
[compiler:info] ============ PEF run finished and get tensors ========
[JITPerf] &JIT::construct 190 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 20 ns
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] fill_ ...
[JITPerf] &JIT::construct 40 ns
[compiler:info] [torch_rdu] empty for size: {1, 2} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_backward_out ...
[JITPerf] &JIT::construct 211 ns
[JITPerf] &JIT::construct 69 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 71 ns
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631f38dd0 1 has_backanno: 0
[compiler:info] [torch_rdu]_log_softmax_backward_data ... self dims: {1, 2} grad_output dims: {1, 2} output dims: {1, 2} dim: 1 --  device_type: rdu:0 rdu:0 rdu:0
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_empty() 310 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 100 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631d4d5f0 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631d04300 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 953776 ns
[JITPerf] &JIT::construct 110 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 170 ns
[JITPerf] update_ir() 2110 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1152777 ns
[JITPerf] apply_binary() 1162097 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630e25e80 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 1}
[compiler:info]   strides: {1, 2}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {2, 1} mat2 dims: {1, 16} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 91 ns
[JITPerf] get_empty() 289 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 80 ns
[JITPerf] &JIT::construct 80 ns
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 53980 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 190 ns
[JITPerf] update_ir() 1150 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Permute"(%5) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %7 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %8 = "air.Matmul"(%6, %7) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 197401 ns
[JITPerf] apply_binary() 207421 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e631d4d5f0 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750024ca0 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 16}
[compiler:info]   strides: {16, 1}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 71 ns
[JITPerf] get_rdu_tensor_impl() 111 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d2f7f0 1 has_backanno: 0
[JITPerf] &JIT::construct 160 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] extract_inputs_helper() 855375 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 250 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] update_ir() 43510 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 2 : i64, sym_name = "add_lambda1", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %3 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Softmax"(%4) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Reciprocal"(%5) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Mul"(%3, %6) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.SoftmaxGrad"(%4, %7) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.Permute"(%8) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %10 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %11 = "air.Matmul"(%9, %10) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %12 = "air.Permute"(%11) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %14 = "air.Collect"(%2, %13) {kConfigured = true, kLambda = @add_lambda1, kMacInfoName = "collect_default", kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %16 = "air.Permute"(%14) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%16) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1230618 ns
[JITPerf] apply_binary_in_place() 1233388 ns
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 40 ns
[JITPerf] get_rdu_tensor_impl() 130 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[JITPerf] &JIT::construct 50 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 31 ns
[JITPerf] &JIT::construct 31 ns
[JITPerf] &JIT::construct 31 ns
[JITPerf] &JIT::construct 29 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 31 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 40 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] extract_inputs_helper() 731445 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] get_rdu_tensor_impl() 150 ns
[JITPerf] update_ir() 2060 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda2", type = () -> ()} : () -> ()
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1_0", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Permute"(%2) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %6 = "air.Softmax"(%5) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Reciprocal"(%6) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.Mul"(%4, %7) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.SoftmaxGrad"(%5, %8) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %11 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %12 = "air.Matmul"(%10, %11) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %14 = "air.Permute"(%13) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Collect"(%3, %14) {kConfigured = true, kLambda = @add_lambda1_0, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %16 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%15) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %18 = "air.Permute"(%17) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %19 = "air.Permute"(%18) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %20 = "air.Permute"(%19) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %21 = "air.Collect"(%0, %20) {kConfigured = true, kLambda = @add_lambda2, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 958636 ns
[JITPerf] apply_binary_in_place() 960266 ns
[JITPerf] &JIT::construct 40 ns
[compiler:info] [torch_rdu] Copy from: 0x55e630e10f00 to: 0x55e632f83450
[compiler:info]   Source: 4 bytes with name  0x55e631435c00
[compiler:info]   Dest: 4 bytes with name  0x0
[compiler:info] [torch_rdu_cpu_fallback] zero_ ...
[JITPerf] &JIT::construct 60 ns
[JITPerf] force_evaluate::RDUTensorImpl 150 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 26680 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda2", type = () -> ()} : () -> ()
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1_0", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Permute"(%2) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %6 = "air.Softmax"(%5) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Reciprocal"(%6) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.Mul"(%4, %7) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.SoftmaxGrad"(%5, %8) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %11 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %12 = "air.Matmul"(%10, %11) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %14 = "air.Permute"(%13) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Collect"(%3, %14) {kConfigured = true, kLambda = @add_lambda1_0, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %16 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%15) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %18 = "air.Permute"(%17) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %19 = "air.Permute"(%18) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %20 = "air.Permute"(%19) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %21 = "air.Collect"(%0, %20) {kConfigured = true, kLambda = @add_lambda2, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    "air.Output"(%21) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
    "air.Output"(%18) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<2x16xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 126561 ns
[compiler:info] ====== HASH INFO: 38fa44a6a222f52653b5d1dc447eda7c4e2bf85d29695732ea966ce2c91e68b3
[compiler:info] Found cached PEF!!! /scratch/jobs/38941858/jit_out/jit_out.2.pef
[JITPerf] force_evaluate::CompilePEF 194431 ns
[JITPerf] force_evaluate::FilterInputs 38890 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 368187199 ns
[compiler:info] ============ PEF run finished and get tensors ========
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {1, 16} mat2 dims: {16, 2} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 240 ns
[JITPerf] get_empty() 860 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 90 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750024ca0 1 has_backanno: 0
[JITPerf] &JIT::construct 110 ns
[JITPerf] extract_inputs_helper() 1420449 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_rdu_tensor_impl() 180 ns
[JITPerf] update_ir() 2020 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1555800 ns
[JITPerf] apply_binary() 1566740 ns
[compiler:info] [torch_rdu] _log_softmax ...
[JITPerf] &JIT::construct 90 ns
[JITPerf] get_empty() 200 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 60 ns
[JITPerf] extract_inputs_helper() 1840 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 40 ns
[JITPerf] get_rdu_tensor_impl() 80 ns
[JITPerf] update_ir() 930 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_unary() 110871 ns
[JITPerf] apply_unary_out() 118371 ns
[compiler:info] RDU shallow_copy_and_detach &1 0x7f4750024ca0 0 has_backanno: 0
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_forward_out ...
[JITPerf] &JIT::construct 50 ns
[JITPerf] force_evaluate::RDUTensorImpl 200 ns
[compiler:info] Forcing evaluation...
[compiler:info] owning_ir_storage count: 2
[JITPerf] force_evaluate::PrepareIR 38100 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Matmul"(%0, %2) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x16xbf16>, tensor<16x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Softmax"(%3) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.Log"(%4) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    "air.Output"(%3) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
    "air.Output"(%5) {kConfigured = true, kNodeCategory = 5 : i64} : (tensor<1x2xbf16>) -> ()
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] force_evaluate::PopulateMeta 85691 ns
[compiler:info] ====== HASH INFO: dab861f9d5b500e2257da57984b94ffe395ce7cef116e21c831abf556923e098
[compiler:info] Found cached PEF!!! /scratch/jobs/38941858/jit_out/jit_out.0.pef
[JITPerf] force_evaluate::CompilePEF 162381 ns
[JITPerf] force_evaluate::FilterInputs 33590 ns
Log ID initialized to: [surajk][python][629392] at /var/log/sambaflow/runtime/sn.log
[JITPerf] force_evaluate::Runtime 358733210 ns
[compiler:info] ============ PEF run finished and get tensors ========
[JITPerf] &JIT::construct 280 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[compiler:info] [torch_rdu] empty_strided ...
[compiler:info] [torch_rdu] empty for size: {} ...
[compiler:info] [torch_rdu_cpu_fallback] fill_ ...
[JITPerf] &JIT::construct 40 ns
[compiler:info] [torch_rdu] empty for size: {1, 2} ...
[compiler:info] [torch_rdu_cpu_fallback] nll_loss_backward_out ...
[JITPerf] &JIT::construct 371 ns
[JITPerf] &JIT::construct 71 ns
[JITPerf] &JIT::construct 69 ns
[JITPerf] &JIT::construct 69 ns
[JITPerf] &JIT::construct 71 ns
[JITPerf] &JIT::construct 71 ns
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630fd62a0 1 has_backanno: 0
[compiler:info] [torch_rdu]_log_softmax_backward_data ... self dims: {1, 2} grad_output dims: {1, 2} output dims: {1, 2} dim: 1 --  device_type: rdu:0 rdu:0 rdu:0
[JITPerf] &JIT::construct 100 ns
[JITPerf] get_empty() 300 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 100 ns
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630e25e80 1 has_backanno: 0
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e633054780 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 1407149 ns
[JITPerf] &JIT::construct 150 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 180 ns
[JITPerf] update_ir() 2040 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1586810 ns
[JITPerf] apply_binary() 1595650 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750024ca0 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 1}
[compiler:info]   strides: {1, 2}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] mm ... self dims: {2, 1} mat2 dims: {1, 16} device_type: rdu:0 rdu:0
[JITPerf] &JIT::construct 80 ns
[JITPerf] get_empty() 260 ns
[compiler:info] [torch_rdu] empty for size: {} ...
[JITPerf] get_rdu_tensor_impl() 140 ns
[JITPerf] &JIT::construct 80 ns
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e62f84d0e0 1 has_backanno: 0
[JITPerf] extract_inputs_helper() 52641 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 150 ns
[JITPerf] update_ir() 1150 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %2 = "air.Softmax"(%1) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %3 = "air.Reciprocal"(%2) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %4 = "air.Mul"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %5 = "air.SoftmaxGrad"(%1, %4) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Permute"(%5) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %7 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %8 = "air.Matmul"(%6, %7) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 196261 ns
[JITPerf] apply_binary() 205201 ns
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630e25e80 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {16, 2}
[compiler:info]   strides: {1, 16}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] Transpose tensors...
[compiler:info] TRANSPOSE permute {1, 0}
[compiler:info] RDU shallow_copy_and_detach &&1 0x7f4750027b10 0 has_backanno: 0
[compiler:info] set_tensor_view:
[compiler:info]   sizes: {2, 16}
[compiler:info]   strides: {16, 1}
[compiler:info]   offset: 0
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 70 ns
[JITPerf] get_rdu_tensor_impl() 230 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630d2f7f0 1 has_backanno: 0
[JITPerf] &JIT::construct 200 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 70 ns
[JITPerf] extract_inputs_helper() 823175 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] get_rdu_tensor_impl() 330 ns
[JITPerf] &JIT::construct 60 ns
[JITPerf] &JIT::construct 71 ns
[JITPerf] &JIT::construct 71 ns
[JITPerf] update_ir() 43131 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 2 : i64, sym_name = "add_lambda1", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %3 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Softmax"(%4) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %6 = "air.Reciprocal"(%5) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Mul"(%3, %6) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.SoftmaxGrad"(%4, %7) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 2 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.Permute"(%8) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %10 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %11 = "air.Matmul"(%9, %10) {kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %12 = "air.Permute"(%11) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %14 = "air.Collect"(%2, %13) {kConfigured = true, kLambda = @add_lambda1, kMacInfoName = "collect_default", kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Permute"(%0) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %16 = "air.Permute"(%14) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%16) {kConfigured = true, kNodeCategory = 2 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 1190738 ns
[JITPerf] apply_binary_in_place() 1193538 ns
[compiler:info] [torch_rdu] add_ ...
[JITPerf] &JIT::construct 50 ns
[JITPerf] get_rdu_tensor_impl() 100 ns
[compiler:info] in place!
[compiler:info] Creating new IR...
[compiler:info] [torch_rdu] alias ...
[compiler:info] RDU shallow_copy_and_detach &&1 0x55e630c07ae0 1 has_backanno: 0
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 20 ns
[compiler:info] Number of owners (pre): 1
[compiler:info] Number of other owners (pre): 1
[compiler:info] Number of owners (post): 2
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] extract_inputs_helper() 753064 ns
[JITPerf] &JIT::construct 29 ns
[JITPerf] &JIT::construct 29 ns
[JITPerf] &JIT::construct 29 ns
[JITPerf] &JIT::construct 20 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] &JIT::construct 30 ns
[JITPerf] get_rdu_tensor_impl() 150 ns
[JITPerf] update_ir() 1820 ns
[compiler:info] module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "jit_out", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kEliminateBufferTimeout = 100 : i64, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = false, arc.kExperimentalRAILCrossEntropyGrad = false, arc.kGenerateReference = true, arc.kGenerateTensorboard = false, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizeDramTransfers = false, arc.kOutputFolder = "/scratch/jobs/38941858", arc.kOverrideMaxFanout = 0 : i64, arc.kPefName = "jit_out", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kUseTBufferEverywhere = false, arc.kVerbose = true, mac.kDisableMacTiling = false, mac.kMacDisableMappingSort = false, mac.kMacDisableRetryLowerScalingFactor = false, mac.kMacEnableBufferTrialCompile = false, mac.kMacEnableHDRetryLowerVisibleResources = false, mac.kMacEnableNodeTrialCompile = false, mac.kMacEnableNodeTrialCompileLogging = false, mac.kMacIsUnrollingFirst = false, mac.kMacMaxTilingDepth = 0 : i64, mac.kMacOnlyCompileMac = false, mac.kMacPlot = false, mac.kMacPrintMappingIR = false, mac.kMacSectionCutBeamSearch = [2, 2], mac.kMacSplitCatAsStageBuffer = false, mac.kMacTemplateDBDir = "", mac.kMacTensorParallel = "none", mac.kMacUseHostFIFO = false}  {
  module @templates  {
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 1 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 1 : i64, kValue = "-0.010000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 1 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda2", type = () -> ()} : () -> ()
    "air.Lambda"() ( {
      %0 = "air.lambda.input"() {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %1 = "air.lambda.input"() {kConfigured = true, kId = 1 : i64, kNodeCategory = 2 : i64} : () -> tensor<2x16xbf16>
      %2 = "air.Imm"() {kConfigured = true, kNodeCategory = 2 : i64, kValue = "1.000000"} : () -> tensor<1xbf16>
      %3 = "air.Mul"(%1, %2) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<1xbf16>) -> tensor<2x16xbf16>
      %4 = "air.Add"(%0, %3) {kBinaryOp = true, kConfigured = true, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
      "air.lambda.output"(%4) {kConfigured = true, kId = 0 : i64, kNodeCategory = 2 : i64} : (tensor<2x16xbf16>) -> ()
      "tlir.terminator"() {kConfigured = true, kUniqueId = 7 : i64} : () -> ()
    }) {kConfigured = true, kNodeCategory = 1 : i64, sym_name = "add_lambda1_0", type = () -> ()} : () -> ()
  }
  module @sections  {
    %0 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %1 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<2x16xbf16>
    %2 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %3 = "air.Permute"(%2) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %4 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %5 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x2xbf16>
    %6 = "air.Softmax"(%5) {kConfigured = true, kDim = 1 : i64, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %7 = "air.Reciprocal"(%6) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %8 = "air.Mul"(%4, %7) {kBinaryOp = true, kConfigured = true, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %9 = "air.SoftmaxGrad"(%5, %8) {kConfigured = true, kConvertToFP32 = false, kDim = 1 : i64, kEnableNoRecompute = false, kNodeCategory = 1 : i64} : (tensor<1x2xbf16>, tensor<1x2xbf16>) -> tensor<1x2xbf16>
    %10 = "air.Permute"(%9) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<1x2xbf16>) -> tensor<2x1xbf16>
    %11 = "air.Tensor"() {kConfigured = true, kIsWeight = false, kNodeCategory = 5 : i64} : () -> tensor<1x16xbf16>
    %12 = "air.Matmul"(%10, %11) {kConfigured = true, kNodeCategory = 1 : i64} : (tensor<2x1xbf16>, tensor<1x16xbf16>) -> tensor<2x16xbf16>
    %13 = "air.Permute"(%12) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %14 = "air.Permute"(%13) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %15 = "air.Collect"(%3, %14) {kConfigured = true, kLambda = @add_lambda1_0, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
    %16 = "air.Permute"(%1) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %17 = "air.Permute"(%15) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %18 = "air.Permute"(%17) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %19 = "air.Permute"(%18) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<2x16xbf16>) -> tensor<16x2xbf16>
    %20 = "air.Permute"(%19) {kConfigured = true, kNodeCategory = 1 : i64, kPermutation = [1 : index, 0 : index]} : (tensor<16x2xbf16>) -> tensor<2x16xbf16>
    %21 = "air.Collect"(%0, %20) {kConfigured = true, kLambda = @add_lambda2, kMacInfoName = "collect_default", kNodeCategory = 1 : i64} : (tensor<2x16xbf16>, tensor<2x16xbf16>) -> tensor<2x16xbf16>
  }
  module @schedule  {
  }
  module @rnn_function  {
  }
}
[JITPerf] apply_binary_() 976806 ns
[JITPerf] apply_binary_in_place() 978566 ns
[JITPerf] &JIT::construct 50 ns
[compiler:info] [torch_rdu] Copy from: 0x55e630c07740 to: 0x55e632f707f0
[compiler:info]   Source: 4 bytes with name  0x55e631435cc0
[compiler:info]   Dest: 4 bytes with name  0x0
[JITPerf] &JIT::construct 271 ns
All losses matched!
Compile count: 9
[JITPerf] &JIT::construct 70 ns
Pef count: 3
[JITPerf] &JIT::construct 70 ns
[JITPerf] &JIT::construct 60 ns
++ cat /proc/629390/cgroup
++ grep -oP '^.*:memory:\K.*$'
+ cat /sys/fs/cgroup/memory//slurm/uid_1447851142/job_38941858/step_batch/task_0/memory.max_usage_in_bytes
+ grep --text -oP 'slurmJobId=38941858.*Physical RDU ID: \K\d+' /var/log/sambaflow/runtime/sn.log
+ true
<181>2022-07-11T00:53:08.164526-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:08.237407-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:08.237495-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:11.061380-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:11.133984-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:11.134051-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:11.424908-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:11.497677-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:11.497743-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:14.715799-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:14.789006-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:14.789091-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:15.131793-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:15.204815-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:15.204915-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:15.510530-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:15.583427-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:15.583504-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:15.879701-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:15.952507-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:15.952588-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:16.257896-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:16.332683-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:16.332769-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0
<181>2022-07-11T00:53:16.623487-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Resource Status: Allocation Success
<181>2022-07-11T00:53:16.697107-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] grdu_mask: 0
<181>2022-07-11T00:53:16.697187-07:00 sc2-s7 [surajk][python][629392]: [NOTICE][RSC][meta hostname=sc2-s7.sambanovasystems.com tid=629392 slurmJobId=38941858] Physical RDU 0

SlurmJobInfo(state='COMPLETED', elapsed_string='00:00:18', elapsed_seconds=18, start_time='2022-07-11T07:53:02', exit_code=0, exit_signal=0, host='sc2-s7', os='ubuntu 20.04')
